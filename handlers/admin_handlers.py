from aiogram import Router, F
from aiogram.types import Message, ReplyToMessage
from aiogram.utils.markdown import hbold, hitalic
from datetime import datetime

from models.ticket import Reply, TicketStatus
from utils.formatters import format_reply_for_user

router = Router()


@router.message(F.reply_to_message)
async def handle_admin_reply(message: Message, db, bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–µ"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ
    if not message.chat.id == int(message.bot.config.ADMIN_GROUP_ID):
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞—é—Ç
    replied_message = message.reply_to_message
    
    # –ò—â–µ–º –∑–∞—è–≤–∫—É –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ
    ticket = await db.get_ticket_by_group_message_id(replied_message.message_id)
    
    if not ticket:
        await message.reply(
            f"‚ùå {hbold('–û—à–∏–±–∫–∞')}\n\n"
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞—è–≤–∫—É –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
            f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞—è–≤–∫–æ–π."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ
    admin = message.from_user
    admin_id = admin.id
    admin_name = admin.full_name or "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    admin_username = admin.username or ""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    reply_text = message.text or "–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    reply = Reply(
        ticket_id=ticket.id,
        admin_id=admin_id,
        admin_name=admin_name,
        admin_username=admin_username,
        reply_text=reply_text
    )
    
    created_reply = await db.create_reply(reply)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ "–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ"
    await db.update_ticket_status(ticket.id, TicketStatus.IN_PROGRESS)
    
    try:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_reply_text = format_reply_for_user(created_reply, ticket.id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_message(
            chat_id=ticket.user_id,
            text=user_reply_text,
            parse_mode="HTML"
        )
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ
        await message.reply(
            f"‚úÖ {hbold('–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')}\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {ticket.user_name}\n"
            f"üé´ –ó–∞—è–≤–∫–∞: #{ticket.id}\n"
            f"üìù –û—Ç–≤–µ—Ç: {reply_text[:50]}{'...' if len(reply_text) > 50 else ''}"
        )
        
    except Exception as e:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.reply(
            f"‚ùå {hbold('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏')}\n\n"
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n"
            f"–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.\n\n"
            f"üé´ –ó–∞—è–≤–∫–∞: #{ticket.id}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {ticket.user_name} (ID: {ticket.user_id})"
        )


@router.message(F.text.startswith("/close"))
async def close_ticket_handler(message: Message, db):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞—è–≤–∫–∏"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if not message.chat.id == int(message.bot.config.ADMIN_GROUP_ID):
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    command_parts = message.text.split()
    if len(command_parts) != 2:
        await message.reply(
            f"‚ùå {hbold('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã')}\n\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /close <–Ω–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏>\n"
            f"–ü—Ä–∏–º–µ—Ä: /close 123"
        )
        return
    
    try:
        ticket_id = int(command_parts[1])
    except ValueError:
        await message.reply(
            f"‚ùå {hbold('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏')}\n\n"
            f"–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫—É
    ticket = await db.get_ticket_by_id(ticket_id)
    
    if not ticket:
        await message.reply(
            f"‚ùå {hbold('–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')}\n\n"
            f"–ó–∞—è–≤–∫–∞ #{ticket_id} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        )
        return
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    await db.update_ticket_status(ticket.id, TicketStatus.CLOSED)
    
    await message.reply(
        f"‚úÖ {hbold('–ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞')}\n\n"
        f"üé´ –ó–∞—è–≤–∫–∞ #{ticket.id} –∑–∞–∫—Ä—ã—Ç–∞\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {ticket.user_name}\n"
        f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {ticket.message_text[:100]}{'...' if len(ticket.message_text) > 100 else ''}"
    )


@router.message(F.text.startswith("/stats"))
async def stats_handler(message: Message, db):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞—è–≤–æ–∫"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if not message.chat.id == int(message.bot.config.ADMIN_GROUP_ID):
        return
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # –ü–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
    await message.reply(
        f"üìä {hbold('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫')}\n\n"
        f"üîß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        f"–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞—è–≤–∫–∞–º."
    )
